{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","prev","handleSubmit","preventDefault","props","onSubmit","this","type","pattern","title","required","onChange","Component","ContactItem","ContactList","contacts","map","id","App","formSubmitHandler","data","newContact","uuidv4","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAiDeA,E,4MA9CbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAEVC,aAAe,SAAAC,GACb,MAAwBA,EAAEC,cAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,UAAS,SAAAC,GAAI,kCACbA,GADa,kBAEfP,EAAOK,Q,EAGZG,aAAe,SAAAL,GACbA,EAAEM,iBACF,EAAKC,MAAMC,SAAS,EAAKZ,Q,4CAE3B,WACE,OACE,uBAAMY,SAAUC,KAAKJ,aAArB,UACE,yCAEE,uBACEK,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUL,KAAKV,kBAGnB,2CAEE,uBACEW,KAAK,MACLb,KAAK,SACLc,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUL,KAAKV,kBAGnB,wBAAQW,KAAK,SAAb,gC,GAzCkBK,aCUXC,G,YATK,SAAC,GAAD,IAAGnB,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,OAClB,qBAAID,KAAMA,EAAMC,OAAQA,EAAxB,UACGD,EADH,IACUC,OCSGmB,EAVK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAClB,6BACGA,EAASC,KAAI,gBAAGC,EAAH,EAAGA,GAAIvB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,cAAC,EAAD,CAAsBD,KAAMA,EAAMC,OAAQA,GAAxBsB,S,QCmCTC,G,kNAlCbzB,MAAQ,CACNsB,SAAU,CACR,CACEE,GAAI,EACJvB,KAAM,OACNC,OAAQ,e,EAKdwB,kBAAoB,SAAAC,GAClB,IAAMC,EAAa,CACjBJ,GAAIK,cACJ5B,KAAM0B,EAAK1B,KACXC,OAAQyB,EAAKzB,QAEf,EAAKK,UAAS,SAAAuB,GAAS,MAAK,CAC1BR,SAAS,GAAD,mBAAMQ,EAAUR,UAAhB,CAA0BM,S,4CAItC,WACE,OACE,qCACE,2CACA,cAAC,EAAD,CAAahB,SAAUC,KAAKa,oBAC5B,0CAEA,cAAC,EAAD,CAAaJ,SAAUT,KAAKb,MAAMsB,kB,GA7BxBH,cCFlBY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8fae05f8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState(prev => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './ContactItem.module.scss';\r\n\r\nconst ContactItem = ({ name, number }) => (\r\n  <li name={name} number={number}>\r\n    {name}:{number}\r\n  </li>\r\n);\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.number.isRequired,\r\n};\r\nexport default ContactItem;\r\n","import styles from './ContactList.module.scss';\r\nimport ContactItem from '../ContactItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactItem key={id} name={name} number={number} />\r\n    ))}\r\n  </ul>\r\n);\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n};\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\n\nimport ContactList from './components/ContactList';\nimport { v4 as uuidv4 } from 'uuid';\nimport './styles.scss';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      {\n        id: 1,\n        name: 'Test',\n        number: '555-55-55',\n      },\n    ],\n    // filter: '',\n  };\n  formSubmitHandler = data => {\n    const newContact = {\n      id: uuidv4(),\n      name: data.name,\n      number: data.number,\n    };\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, newContact],\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        {/* <Filter ... /> */}\n        <ContactList contacts={this.state.contacts} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}