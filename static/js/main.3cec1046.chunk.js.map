{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","prev","handleSubmit","preventDefault","props","onSubmit","this","type","pattern","title","required","onChange","Component","Filter","ContactItem","id","onDelete","onClick","ContactList","contacts","map","App","filter","addContact","data","newContact","uuidv4","contact","toLowerCase","includes","alert","prevState","deleteContact","getVisibledContacts","normalizedFilter","changeFilter","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAiDeA,E,4MA9CbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAEVC,aAAe,SAAAC,GACb,MAAwBA,EAAEC,cAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,UAAS,SAAAC,GAAI,kCACbA,GADa,kBAEfP,EAAOK,Q,EAGZG,aAAe,SAAAL,GACbA,EAAEM,iBACF,EAAKC,MAAMC,SAAS,EAAKZ,Q,4CAE3B,WACE,OACE,uBAAMY,SAAUC,KAAKJ,aAArB,UACE,yCAEE,uBACEK,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUL,KAAKV,kBAGnB,2CAEE,uBACEW,KAAK,MACLb,KAAK,SACLc,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUL,KAAKV,kBAGnB,wBAAQW,KAAK,SAAb,gC,GAzCkBK,aCiBXC,EAhBA,SAAC,GAAyB,IAAvBd,EAAsB,EAAtBA,MAAOY,EAAe,EAAfA,SACvB,OACE,8BACE,4DAEE,uBAAOJ,KAAK,OAAOR,MAAOA,EAAOY,SAAUA,UCapCG,G,YAlBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIrB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQqB,EAArB,EAAqBA,SAArB,OAClB,qBAAItB,KAAMA,EAAMC,OAAQA,EAAxB,UACGD,EADH,IACUC,EACR,wBACEY,KAAK,SACLU,QAAS,WACPD,EAASD,IAHb,yBCeWG,EAjBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUH,EAAb,EAAaA,SAAb,OAClB,6BACGG,EAASC,KAAI,gBAAGL,EAAH,EAAGA,GAAIrB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,cAAC,EAAD,CAEEoB,GAAIA,EACJrB,KAAMA,EACNC,OAAQA,EACRqB,SAAUA,GAJLD,S,QCuDEM,G,kNAvDb5B,MAAQ,CACN0B,SAAU,CACR,CAAEJ,GAAI,OAAQrB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEoB,GAAI,OAAQrB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEoB,GAAI,OAAQrB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEoB,GAAI,OAAQrB,KAAM,iBAAkBC,OAAQ,cAEhD2B,OAAQ,I,EAGVC,WAAa,SAAAC,GACX,IAAQL,EAAa,EAAK1B,MAAlB0B,SACFM,EAAa,CACjBV,GAAIW,cACJhC,KAAM8B,EAAK9B,KACXC,OAAQ6B,EAAK7B,QAEfwB,EACGC,KAAI,SAAAO,GAAO,OAAIA,EAAQjC,KAAKkC,iBAC5BC,SAASL,EAAK9B,KAAKkC,eAClBE,MAAM,GAAD,OAAIN,EAAK9B,KAAT,4BACL,EAAKM,UAAS,SAAA+B,GAAS,MAAK,CAC1BZ,SAAS,GAAD,mBAAMY,EAAUZ,UAAhB,CAA0BM,S,EAG1CO,cAAgB,SAAAjB,GACd,EAAKf,UAAS,SAAA+B,GAAS,MAAK,CAC1BZ,SAAUY,EAAUZ,SAASG,QAAO,SAAAK,GAAO,OAAIA,EAAQZ,KAAOA,U,EAGlEkB,oBAAsB,WACpB,MAA6B,EAAKxC,MAA1B0B,EAAR,EAAQA,SACFe,EADN,EAAkBZ,OACcM,cAChC,OAAOT,EAASG,QAAO,SAAAK,GAAO,OAC5BA,EAAQjC,KAAKkC,cAAcC,SAASK,O,EAGxCC,aAAe,SAAAtC,GACb,EAAKG,SAAS,CAAEsB,OAAQzB,EAAEC,cAAcC,S,4CAE1C,WACE,IAAQuB,EAAWhB,KAAKb,MAAhB6B,OACFc,EAAkB9B,KAAK2B,sBAC7B,OACE,qCACE,2CACA,cAAC,EAAD,CAAa5B,SAAUC,KAAKiB,aAC5B,0CACA,cAAC,EAAD,CAAQxB,MAAOuB,EAAQX,SAAUL,KAAK6B,eACtC,cAAC,EAAD,CAAahB,SAAUiB,EAAiBpB,SAAUV,KAAK0B,uB,GAlD7CpB,cCFlByB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3cec1046.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState(prev => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div>\r\n      <label>\r\n        Filter contacts by name\r\n        <input type=\"text\" value={value} onChange={onChange} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './ContactItem.module.scss';\r\n\r\nconst ContactItem = ({ id, name, number, onDelete }) => (\r\n  <li name={name} number={number}>\r\n    {name}:{number}\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => {\r\n        onDelete(id);\r\n      }}\r\n    >\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func,\r\n};\r\nexport default ContactItem;\r\n","import styles from './ContactList.module.scss';\r\nimport ContactItem from '../ContactItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onDelete }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactItem\r\n        key={id}\r\n        id={id}\r\n        name={name}\r\n        number={number}\r\n        onDelete={onDelete}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDelete: PropTypes.func,\r\n};\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport { v4 as uuidv4 } from 'uuid';\nimport './styles.scss';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = data => {\n    const { contacts } = this.state;\n    const newContact = {\n      id: uuidv4(),\n      name: data.name,\n      number: data.number,\n    };\n    contacts\n      .map(contact => contact.name.toLowerCase())\n      .includes(data.name.toLowerCase())\n      ? alert(`${data.name} is already in contacts`)\n      : this.setState(prevState => ({\n          contacts: [...prevState.contacts, newContact],\n        }));\n  };\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n  getVisibledContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibledContacts();\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList contacts={visibleContacts} onDelete={this.deleteContact} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}